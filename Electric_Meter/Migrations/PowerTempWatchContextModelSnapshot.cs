// <auto-generated />
using System;
using Electric_Meter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Electric_Meter.Migrations
{
    [DbContext(typeof(PowerTempWatchContext))]
    partial class PowerTempWatchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Electric_Meter.Models.DvElectricDataTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Exp")
                        .HasColumnType("float");

                    b.Property<double?>("Ia")
                        .HasColumnType("float");

                    b.Property<double?>("Ib")
                        .HasColumnType("float");

                    b.Property<double?>("Ic")
                        .HasColumnType("float");

                    b.Property<int>("IdMachine")
                        .HasColumnType("int");

                    b.Property<double?>("Imp")
                        .HasColumnType("float");

                    b.Property<double?>("Pa")
                        .HasColumnType("float");

                    b.Property<double?>("Pb")
                        .HasColumnType("float");

                    b.Property<double?>("Pc")
                        .HasColumnType("float");

                    b.Property<double?>("Pt")
                        .HasColumnType("float");

                    b.Property<double?>("TotalElectric")
                        .HasColumnType("float");

                    b.Property<double?>("Ua")
                        .HasColumnType("float");

                    b.Property<double?>("Ub")
                        .HasColumnType("float");

                    b.Property<double?>("Uc")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("dv_ElectricDataTemp", (string)null);
                });

            modelBuilder.Entity("Electric_Meter.Models.DvFactoryAssembling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Assembling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Factory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dv_FactoryAddress_Configs");
                });

            modelBuilder.Entity("Electric_Meter.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("int");

                    b.Property<int>("Baudrate")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dv_Machine");
                });
#pragma warning restore 612, 618
        }
    }
}
